index:	0
title:	FileServe
desc:	[FSRV] <a href="http://fileserve.com/" rel="nofollow">"http://fileserve.com/"</a>

body:	
	<p>Check <a href="http://fileserve.com/terms.php" rel="nofollow">terms of service</a>.</p>
<p>Status: OK 2011-03-03</p>
	<pre># $Id: FileServe 12189 2011-03-04 17:30:09Z sparky $
# Get::FileServe - File getter plugin for rsget.pl
#
# 2010 (c) Paweł Zuzelski &lt;pawelz@pld-linux.org&gt;
# 2011 (c) Przemysław Iskra &lt;sparky@pld-linux.org&gt;
#		This program is free software,
# you may distribute it under GPL v2 or newer.

name: FileServe
short: FSRV
web: "http://fileserve.com/"
tos: "http://fileserve.com/terms.php"
uri: qr{fileserve\.com/file/[A-Za-z0-9]+(/.*)?}
cookie: fsrv
status: OK 2011-03-03

unify:
	s/#.*//;
	return "http://fileserve.com/file/$1"
		if m{fileserve\.com/file/([A-Za-z0-9]+)};

start:
	GET( $-{_uri} );

	ERROR( "file not found: $1" ) if m#&lt;span class="fail_info"&gt;\s*(.*?)\s*&lt;/span&gt;#s
		or m{&lt;img src="/images/stop_error\.gif".*?&lt;h1&gt;.*?&lt;/h1&gt;&lt;/li&gt;&lt;li&gt;(.*?)&lt;/li&gt;}s;

	! m#&lt;h1&gt;(.+?)&lt;br/&gt;&lt;/h1&gt;#;
	my $fname = $1;
	! m#&lt;span.*?&gt;&lt;strong&gt;($STDSIZE)&lt;/strong&gt; \| Uploaded on #o;
	INFO( name =&gt; $fname, asize =&gt; $1 );

	! ( $-{captcha_key} ) = m{var reCAPTCHA_publickey='(.*?)';};
	! ( $-{captcha_encode} ) = m{"recaptcha_shortencode_field".*? value="(.*?)" /&gt;};

	! m{src="(/landing/.+?/download_captcha\.js)"};
	$-{captcha_uri} = $1;

	CLICK( "", post =&gt; { checkDownload =&gt; "check" }, keep_referer =&gt; 1 );

	MULTI() if /{"fail":"parallelDownload"}/;
	RESTART( 900, "free limit reached" ) if /{"fail":"timeLimit"}/;

	ERROR( "some error: $_" ) if /{"fail"/;
	! /{"success":"showCaptcha"}/;

	GET( $-{captcha_uri}, keep_referer =&gt; 1,
		headers =&gt; [ "X-Requested-With: XMLHttpRequest" ] );

stage_getcaptcha:
	GET( "http://www.google.com/recaptcha/api/challenge?k=$-{captcha_key}&amp;ajax=1&amp;cachestop=" . rand,
		keep_referer =&gt; 1 );

	! ( $-{captcha_challenge} ) = m{challenge\s*:\s*'(.*?)'};

	GET( "http://www.google.com/recaptcha/api/image?c=" . $-{captcha_challenge},
		keep_referer =&gt; 1 );

	CAPTCHA(
		qr/\S+ \S+/
	);

	RESTART( 1, "Captcha not solved" ) unless $_;

	CLICK( "/checkReCaptcha.php", post =&gt; {
			recaptcha_shortencode_field =&gt; $-{captcha_encode},
			recaptcha_response_field =&gt; $_,
			recaptcha_challenge_field =&gt; $-{captcha_challenge},
		}, keep_referer =&gt; 1 );

	if ( /{"success":1}/ ) {
		CAPTCHA_RESULT( "OK" );
	} else {
		CAPTCHA_RESULT( "FAIL" );
		GOTO stage_getcaptcha;
	}

	GET( "", post =&gt; { downloadLink =&gt; "wait" }, keep_referer =&gt; 1 );

	! /^\xef\xbb\xbf(\d+)$/s;
	WAIT( -$1, "expecting download link" );

	CLICK( "", post =&gt; { downloadLink =&gt; "show" }, keep_referer =&gt; 1, );

	CLICK_DOWNLOAD( "", post =&gt; { download =&gt; "normal" } );

	RESTART( 1, "free limit reached" )
		if m#You need to wait (\d+) seconds to start another download\.#;

	RESTART( 1, "download link expired" )
		if /&lt;li class="title"&gt;Your download link has expired/;

	RESTART( 60, "captcha error, this shouldn't happen" )
		if /&lt;li class="title"&gt;Captcha error/;

	RESTART( 1, "multi download not allowed" )
		if m{URL=http://www\.fileserve\.com/landing-1403\.php};

# vim: filetype=perl:ts=4:sw=4
</pre>
