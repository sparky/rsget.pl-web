index:	0
title:	FileFactory
desc:	[FF] <a href="http://filefactory.com/">"http://filefactory.com/"</a>

body:	
	<p>Check <a href="http://filefactory.com/legal/terms.php">terms of service</a>.</p>
<p>Status: OK 2010-06-04</p>
	<pre># $Id: FileFactory 11524 2010-06-04 18:17:16Z sparky $
# Get::FileFactory - File getter plugin for rsget.pl
#
# 2009-2010 (c) Przemys≈Çaw Iskra &lt;sparky@pld-linux.org&gt;
#		This program is free software,
# you may distribute it under GPL v2 or newer.

name: FileFactory
short: FF
web: "http://filefactory.com/"
tos: "http://filefactory.com/legal/terms.php"
uri: qr{filefactory\.com/file/[0-9a-z]{6}}
status: OK 2010-06-04

start:
	GET( $-{_uri} );

	RESTART( -2 * 60, "no slots for free users" )
		if /there are currently no free download slots available/;
	ERROR( "file not found" ) if /File Not Found|This file has been deleted/;
	! m{&lt;title&gt;(.*?) - download now for free};
	my $name = $1;
	! m{&lt;div id="info" class="metadata"&gt;\s*&lt;span&gt;($STDSIZE) file uploaded}s;
	my $size = $1;
	INFO( name =&gt; $name, asize =&gt; $size );
	
	MULTI() if /You are currently downloading/;
	if ( /starthtimer[\s\S]*timerend=d\.getTime\(\)\+(\d+);/m ) {
		RESTART( $1 / 1000, "free limit reached" ) if $1 &gt; 0;
	}

	! m#var.*?eval.*?fromCharCode.*?"(\?key=.*?)"#;
	GET( "/file/getLink.js" . $1, keep_referer =&gt; 1 );

	! s/^(.*)var \S+=function\(\){ var \S+=(.*?);.*//m;
	my ($vars, $toeval) = ($1, $2);

	my %vars = map { /var\s+(\S+?)\s*=\s*'(.*?)'/ } split /;/, $vars;
	my $code = join "", map { /'(.*)'/ ? $1 : $vars{ $_ } } split /\s*\+\s*/, $toeval;

	CLICK( $code );

	! m#&lt;span class="countdown".*?&gt;(\d+)&lt;/span&gt;#;
	$-{wait} = $1;
	RESTART( $-{wait}, "free limit reached" ) if $-{wait} &gt; 120;

	! m#var.*?eval.*?fromCharCode.*?"(\?key=.*?)"#;
	GET( "/file/getLink.js" . $1, keep_referer =&gt; 1 );

	! s/^(.*)var \S+=function\(\){ var \S+=(.*?);.*//m;
	my ($vars, $toeval) = ($1, $2);

	my %vars = map { /var\s+(\S+?)\s*=\s*'(.*?)'/ } split /;/, $vars;
	$-{file_uri} = join "", map { /'(.*)'/ ? $1 : $vars{ $_ } } split /\s*\+\s*/, $toeval;

	WAIT( $-{wait}, "starting download" );

	CLICK_DOWNLOAD( $-{file_uri} );

	# file turned out to be html, means we have to wait
	MULTI() if /You are currently downloading too many files at once/;
	RESTART( $1 * 60 - 30, "free limit reached" )
		if /Please wait (\d+) minutes to download more files/;
	RESTART( $1, "free limit reached" )
		if /Please wait (\d+) seconds to download more files/;

# vim: filetype=perl:ts=4:sw=4
</pre>
